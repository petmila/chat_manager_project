from datetime import datetime

from llama_index.core import SimpleDirectoryReader, get_response_synthesizer, SummaryIndex, Settings, PromptTemplate
from llama_index.core import DocumentSummaryIndex
from llama_index.core.node_parser import SentenceSplitter
from llama_index.core.response_synthesizers import ResponseMode
from llama_index.embeddings.huggingface import HuggingFaceEmbedding

from decouple import config
# from langchain.chains.llm import LLMChain
# from langchain_core.prompts import PromptTemplate
# from langchain_text_splitters import RecursiveCharacterTextSplitter
from langchain_community.llms import LlamaCpp
from llama_index.core import Document
from nltk.corpus.reader import documents

max_ctx_size = 4096
kwargs = {"model_path": config("MODEL_PATH"), "n_ctx": max_ctx_size, "max_tokens": max_ctx_size,
                  "n_gpu_layers": 1000, "n_batch": max_ctx_size}
model_instance = LlamaCpp(**kwargs)
text_splitter = SentenceSplitter(chunk_size=4096, chunk_overlap=50)
Settings.embed_model = HuggingFaceEmbedding()
Settings.llm = model_instance
# Settings.embed_model = "local"
new_summary_tmpl_str = (
    "–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –ø—Ä–∏–≤–µ–¥–µ–Ω–∞ –Ω–∏–∂–µ.\n"
    "---------------------\n"
    "{context_str}\n"
    "---------------------\n"
    "–£—á–∏—Ç—ã–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤, –∞ –Ω–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å –Ω–∏–∂–µ. –í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.\n"
    "–ó–∞–ø—Ä–æ—Å: {query_str}\n"
    "–û—Ç–≤–µ—á–∞—Ç—å: "
)
new_summary_tmpl = PromptTemplate(new_summary_tmpl_str)
response_synthesizer = get_response_synthesizer(
        response_mode=ResponseMode.TREE_SUMMARIZE, use_async=True, summary_template=new_summary_tmpl
)


def summary_index(text, doc_id):
    doc_summary_index = DocumentSummaryIndex.from_documents(
        documents=[Document(text=text, doc_id=doc_id)],
        llm=model_instance,
        transformations=[text_splitter],
        response_synthesizer=response_synthesizer,
        show_progress=True,
    )
    return doc_summary_index.get_document_summary(doc_id)


print(summary_index("""Fyodor Urlapov
@iamkrisanit –¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä. –ë—É–¥–µ–º –ª–∏ –º—ã –∑–∞–≤—Ç—Ä–∞ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º –∫ –∑–∞–≤—Ç—Ä–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è–º? –ò–ª–∏ –∑–∞–≤—Ç—Ä–∞—à–Ω—è—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è - —ç—Ç–æ –ª–∏—à—å —Å–ø–æ—Å–æ–± –∞–≥–≥—Ä–µ–≥–∞—Ü–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é –ø—Ä–æ—Å—Ç–æ –≤—ã –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤ —Ü–µ–ª—è—Ö –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∑?
18:43
–ö—Ä–∏—Å—Ç–∏–Ω–∞
In reply to this message
–§–µ–¥–æ—Ä, –¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä! –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–ª–∏ –∫—Ä–∞—Ç–∫–æ –∑–∞—Å–ª—É—à–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏, —á—Ç–æ–±—ã —è –¥–∞–ª–∞ –û–° –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–∞–º, —Ç–∞–∫ –∫–∞–∫ –≤ –∏—Ç–æ–≥–µ –¥–ª—è –Ω–∏—Ö —É –≤–∞—Å –±—É–¥–µ—Ç —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –ë–ú –Ω–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
üëç
18:45
Fyodor Urlapov
–•–æ—Ä–æ—à–æ, —Å–ø–∞—Å–∏–±–æ
üëç
–°—É—Ä–µ–Ω –í–∞—Ä—Ç–∞–Ω–æ–≤ invited anttoinettae
24 February 2024
09:28
–ö—Ä–∏—Å—Ç–∏–Ω–∞
–û—Ç–ø—Ä–∞–≤–ª—è—é —Å–ø–∏—Å–æ–∫ 55 –±–∏–∑–Ω–µ—Å-–º–æ–¥–µ–ª–µ–π (—Å –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –ø—Ä–∏–º–µ—Ä–æ–º –∫–æ–º–ø–∞–Ω–∏–π), –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–æ–¥–µ–ª—å/–º–æ–¥–µ–ª–∏ –∫–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏.
09:36""", str(datetime.today())))