version: '3.11'

services:
  db:
    image: pgvector/pgvector:pg16
    container_name: db_container
    restart: always
    environment:
      POSTGRES_USER: ${SQL_USER}
      POSTGRES_PASSWORD: ${SQL_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${PORT}:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $SQL_USER -p $PORT -d $POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - chat_network
    env_file:
      - .env

  app:
    build: .
    container_name: django_app
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      DJANGO_SECRET_KEY: ${SECRET_KEY}
      DATABASE_NAME: ${SQL_NAME}
      DATABASE_USERNAME: ${SQL_USER}
      DATABASE_PASSWORD: ${SQL_PASSWORD}
      DATABASE_HOST: ${HOST}
      DATABASE_PORT: ${PORT}
    command: ["/bin/sh", "-c", "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]
    networks:
      - chat_network
    env_file:
      - .env

networks:
  chat_network:
    driver: bridge

volumes:
  db_data:
